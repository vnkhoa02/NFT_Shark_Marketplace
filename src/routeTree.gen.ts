/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as NftIndexImport } from './routes/nft/index'
import { Route as MarketplaceIndexImport } from './routes/marketplace/index'
import { Route as CollectionsIndexImport } from './routes/collections/index'
import { Route as BettingIndexImport } from './routes/betting/index'
import { Route as NftCreateIndexImport } from './routes/nft/create/index'
import { Route as NftArtistsIndexImport } from './routes/nft/artists/index'
import { Route as NftIdIndexImport } from './routes/nft/$id/index'
import { Route as CollectionsIdIndexImport } from './routes/collections/$id/index'
import { Route as BettingLeaguesIndexImport } from './routes/betting/leagues/index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const NftIndexRoute = NftIndexImport.update({
  id: '/nft/',
  path: '/nft/',
  getParentRoute: () => rootRoute,
} as any)

const MarketplaceIndexRoute = MarketplaceIndexImport.update({
  id: '/marketplace/',
  path: '/marketplace/',
  getParentRoute: () => rootRoute,
} as any)

const CollectionsIndexRoute = CollectionsIndexImport.update({
  id: '/collections/',
  path: '/collections/',
  getParentRoute: () => rootRoute,
} as any)

const BettingIndexRoute = BettingIndexImport.update({
  id: '/betting/',
  path: '/betting/',
  getParentRoute: () => rootRoute,
} as any)

const NftCreateIndexRoute = NftCreateIndexImport.update({
  id: '/nft/create/',
  path: '/nft/create/',
  getParentRoute: () => rootRoute,
} as any)

const NftArtistsIndexRoute = NftArtistsIndexImport.update({
  id: '/nft/artists/',
  path: '/nft/artists/',
  getParentRoute: () => rootRoute,
} as any)

const NftIdIndexRoute = NftIdIndexImport.update({
  id: '/nft/$id/',
  path: '/nft/$id/',
  getParentRoute: () => rootRoute,
} as any)

const CollectionsIdIndexRoute = CollectionsIdIndexImport.update({
  id: '/collections/$id/',
  path: '/collections/$id/',
  getParentRoute: () => rootRoute,
} as any)

const BettingLeaguesIndexRoute = BettingLeaguesIndexImport.update({
  id: '/betting/leagues/',
  path: '/betting/leagues/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/betting/': {
      id: '/betting/'
      path: '/betting'
      fullPath: '/betting'
      preLoaderRoute: typeof BettingIndexImport
      parentRoute: typeof rootRoute
    }
    '/collections/': {
      id: '/collections/'
      path: '/collections'
      fullPath: '/collections'
      preLoaderRoute: typeof CollectionsIndexImport
      parentRoute: typeof rootRoute
    }
    '/marketplace/': {
      id: '/marketplace/'
      path: '/marketplace'
      fullPath: '/marketplace'
      preLoaderRoute: typeof MarketplaceIndexImport
      parentRoute: typeof rootRoute
    }
    '/nft/': {
      id: '/nft/'
      path: '/nft'
      fullPath: '/nft'
      preLoaderRoute: typeof NftIndexImport
      parentRoute: typeof rootRoute
    }
    '/betting/leagues/': {
      id: '/betting/leagues/'
      path: '/betting/leagues'
      fullPath: '/betting/leagues'
      preLoaderRoute: typeof BettingLeaguesIndexImport
      parentRoute: typeof rootRoute
    }
    '/collections/$id/': {
      id: '/collections/$id/'
      path: '/collections/$id'
      fullPath: '/collections/$id'
      preLoaderRoute: typeof CollectionsIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/nft/$id/': {
      id: '/nft/$id/'
      path: '/nft/$id'
      fullPath: '/nft/$id'
      preLoaderRoute: typeof NftIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/nft/artists/': {
      id: '/nft/artists/'
      path: '/nft/artists'
      fullPath: '/nft/artists'
      preLoaderRoute: typeof NftArtistsIndexImport
      parentRoute: typeof rootRoute
    }
    '/nft/create/': {
      id: '/nft/create/'
      path: '/nft/create'
      fullPath: '/nft/create'
      preLoaderRoute: typeof NftCreateIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/betting': typeof BettingIndexRoute
  '/collections': typeof CollectionsIndexRoute
  '/marketplace': typeof MarketplaceIndexRoute
  '/nft': typeof NftIndexRoute
  '/betting/leagues': typeof BettingLeaguesIndexRoute
  '/collections/$id': typeof CollectionsIdIndexRoute
  '/nft/$id': typeof NftIdIndexRoute
  '/nft/artists': typeof NftArtistsIndexRoute
  '/nft/create': typeof NftCreateIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/betting': typeof BettingIndexRoute
  '/collections': typeof CollectionsIndexRoute
  '/marketplace': typeof MarketplaceIndexRoute
  '/nft': typeof NftIndexRoute
  '/betting/leagues': typeof BettingLeaguesIndexRoute
  '/collections/$id': typeof CollectionsIdIndexRoute
  '/nft/$id': typeof NftIdIndexRoute
  '/nft/artists': typeof NftArtistsIndexRoute
  '/nft/create': typeof NftCreateIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/betting/': typeof BettingIndexRoute
  '/collections/': typeof CollectionsIndexRoute
  '/marketplace/': typeof MarketplaceIndexRoute
  '/nft/': typeof NftIndexRoute
  '/betting/leagues/': typeof BettingLeaguesIndexRoute
  '/collections/$id/': typeof CollectionsIdIndexRoute
  '/nft/$id/': typeof NftIdIndexRoute
  '/nft/artists/': typeof NftArtistsIndexRoute
  '/nft/create/': typeof NftCreateIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/betting'
    | '/collections'
    | '/marketplace'
    | '/nft'
    | '/betting/leagues'
    | '/collections/$id'
    | '/nft/$id'
    | '/nft/artists'
    | '/nft/create'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/betting'
    | '/collections'
    | '/marketplace'
    | '/nft'
    | '/betting/leagues'
    | '/collections/$id'
    | '/nft/$id'
    | '/nft/artists'
    | '/nft/create'
  id:
    | '__root__'
    | '/'
    | '/betting/'
    | '/collections/'
    | '/marketplace/'
    | '/nft/'
    | '/betting/leagues/'
    | '/collections/$id/'
    | '/nft/$id/'
    | '/nft/artists/'
    | '/nft/create/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BettingIndexRoute: typeof BettingIndexRoute
  CollectionsIndexRoute: typeof CollectionsIndexRoute
  MarketplaceIndexRoute: typeof MarketplaceIndexRoute
  NftIndexRoute: typeof NftIndexRoute
  BettingLeaguesIndexRoute: typeof BettingLeaguesIndexRoute
  CollectionsIdIndexRoute: typeof CollectionsIdIndexRoute
  NftIdIndexRoute: typeof NftIdIndexRoute
  NftArtistsIndexRoute: typeof NftArtistsIndexRoute
  NftCreateIndexRoute: typeof NftCreateIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BettingIndexRoute: BettingIndexRoute,
  CollectionsIndexRoute: CollectionsIndexRoute,
  MarketplaceIndexRoute: MarketplaceIndexRoute,
  NftIndexRoute: NftIndexRoute,
  BettingLeaguesIndexRoute: BettingLeaguesIndexRoute,
  CollectionsIdIndexRoute: CollectionsIdIndexRoute,
  NftIdIndexRoute: NftIdIndexRoute,
  NftArtistsIndexRoute: NftArtistsIndexRoute,
  NftCreateIndexRoute: NftCreateIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/betting/",
        "/collections/",
        "/marketplace/",
        "/nft/",
        "/betting/leagues/",
        "/collections/$id/",
        "/nft/$id/",
        "/nft/artists/",
        "/nft/create/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/betting/": {
      "filePath": "betting/index.tsx"
    },
    "/collections/": {
      "filePath": "collections/index.tsx"
    },
    "/marketplace/": {
      "filePath": "marketplace/index.tsx"
    },
    "/nft/": {
      "filePath": "nft/index.tsx"
    },
    "/betting/leagues/": {
      "filePath": "betting/leagues/index.tsx"
    },
    "/collections/$id/": {
      "filePath": "collections/$id/index.tsx"
    },
    "/nft/$id/": {
      "filePath": "nft/$id/index.tsx"
    },
    "/nft/artists/": {
      "filePath": "nft/artists/index.tsx"
    },
    "/nft/create/": {
      "filePath": "nft/create/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
